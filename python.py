import streamlit as st
import google.generativeai as genai

# --- C·∫•u h√¨nh Gemini API ---
genai.configure(api_key=st.secrets["gemini_api_key"])

# --- Kh·ªüi t·∫°o m√¥ h√¨nh ---
model = genai.GenerativeModel("gemini-1.5-flash")

# --- Giao di·ªán Chat ---
st.markdown("---")
st.subheader("üí¨ Tr√≤ chuy·ªán v·ªõi Gemini")

# Kh·ªüi t·∫°o session state cho l·ªãch s·ª≠ h·ªôi tho·∫°i
if "messages" not in st.session_state:
    st.session_state.messages = []

# Hi·ªÉn th·ªã l·ªãch s·ª≠
for msg in st.session_state.messages:
    with st.chat_message(msg["role"]):
        st.markdown(msg["content"])

# √î nh·∫≠p chat
if prompt := st.chat_input("Nh·∫≠p c√¢u h·ªèi c·ªßa b·∫°n..."):
    # Hi·ªÉn th·ªã ngay tin nh·∫Øn ng∆∞·ªùi d√πng
    st.chat_message("user").markdown(prompt)
    st.session_state.messages.append({"role": "user", "content": prompt})

    try:
        # G·ªçi API Gemini
        response = model.generate_content(prompt)
        reply = response.text

    except Exception as e:
        reply = f"‚ö†Ô∏è L·ªói khi g·ªçi Gemini API: {e}"

    # Hi·ªÉn th·ªã ph·∫£n h·ªìi
    with st.chat_message("assistant"):
        st.markdown(reply)

    st.session_state.messages.append({"role": "assistant", "content": reply})
